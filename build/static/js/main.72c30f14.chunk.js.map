{"version":3,"sources":["components/Form.jsx","components/MainMenu.jsx","components/BookItem.jsx","components/BookList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","author","setAuthor","title","setTitle","cover","setCover","isVisible","book","id","useEffect","className","onSubmit","e","preventDefault","submitForm","type","name","value","placeholder","onChange","target","required","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","getBase64","files","then","base64","onClick","closeForm","MainMenu","onPressAddBook","onFillTestData","BookItem","alt","href","src","onEdit","onDelete","BookList","books","length","map","onEditItem","onDeleteItem","Math","random","App","fetchBookList","JSON","parse","localStorage","getItem","item","key","bookList","setBookList","selectedBook","setEditFormVisibility","updateBookList","newBookList","setItem","stringify","openEditForm","push","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72c30f14.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './Form.css'\n\nconst Form = function (props) {\n\n    function onChangeAuthor(e) {\n        setAuthor(e.target.value);\n    }\n\n    function onChangeTitle(e) {\n        setTitle(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.submitForm({\n            id: props.book.id ? props.book.id : -1,\n            author,\n            title,\n            cover\n        })\n    }\n\n    function imageUpload(e) {\n        const file = e.target.files[0];\n        getBase64(file).then(base64 => {\n            setCover(base64)\n            //localStorage[\"fileBase64\"] = base64;\n            //console.log(\"file stored\",base64);\n        });\n    }\n\n    function getBase64(file) {\n        return new Promise((resolve,reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n            reader.readAsDataURL(file);\n        });\n    }\n\n    let [author, setAuthor] = useState('')\n    let [title, setTitle] = useState('')\n    let [cover, setCover] = useState('')\n    let isVisible = props.book.id >= -1 ? \"form-popup form-popup_visible\" : \"form-popup\";\n\n    useEffect(() => {\n        setAuthor(props.book.author);\n        setTitle(props.book.title);\n        setCover(props.book.cover);\n    }, [props.book]);\n\n    return (\n        <div className={isVisible} >\n            <form className=\"form-popup-content\" onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"form-popup__input\" name=\"author\" value={author || \"\"} placeholder=\"Автор\" onChange={onChangeAuthor}/>\n                <input type=\"text\" className=\"form-popup__input\"  name=\"title\" value={title || \"\"} placeholder=\"Наименование*\" onChange={onChangeTitle} required/>\n                <input type=\"file\" className=\"form-popup__input\"  id=\"imageFile\" name='imageFile' onChange={imageUpload} placeholder=\"Обложка\"/>\n                <div>\n                    <button className=\"form-popup__submit\" type=\"submit\">Сохранить</button>\n                    <button className=\"form-popup__close\" onClick={props.closeForm}>Закрыть</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;","import React from 'react';\nimport './MainMenu.css';\n\nconst MainMenu = function (props) {\n\n    function handlePressAddBook() {\n        props.onPressAddBook({\n            id: -1,\n            author: \"\",\n            title: \"\",\n            cover: \"\"\n        });\n    }\n    return (\n        <div>\n            <button className=\"main-menu__btn\" onClick={handlePressAddBook}>Добавить книгу</button>\n            <button className=\"main-menu__btn\" onClick={props.onFillTestData}>Тестовые данные</button>\n        </div>\n    )\n}\n\nexport default MainMenu;","import React from 'react';\nimport './BookItem.css';\nconst BookItem = function (props) {\n    const alt = `${props.book.author} - ${props.book.title}`;\n    return (\n        <a href=\"#\" className=\"book-item\">\n            <img className=\"book-item__cover\" alt={alt} src={props.book.cover} />\n            <div className=\"book-item-descr\">\n                <h2 className=\"book-item__title\">{props.book.title}</h2>\n                <div className=\"book-item-text\">\n                    <p className=\"book-item__author\">{props.book.author}</p>\n                </div>\n            </div>\n            <div className=\"book-item-buttons\">\n                <button className=\"book-item__btn\" onClick={() => props.onEdit(props.book)}>Редактировать</button>\n                <button className=\"book-item__btn\" onClick={() => props.onDelete(props.book)}>Удалить</button>\n            </div>\n        </a>\n    )\n}\n\nexport default BookItem;","import React from 'react';\nimport BookItem from \"./BookItem\";\n\nconst BookList = function (props) {\n    if (props.books.length > 0) {\n        return (\n            <div> {\n                props.books.map(book =>\n                    <BookItem\n                        key={Math.random()*1000000}\n                        book={book}\n                        onEdit={props.onEditItem}\n                        onDelete={props.onDeleteItem}\n                    />\n                )\n            } </div>\n        )\n    } else {\n        return (\n            <div>\n                <p>Список пуст</p>\n            </div>\n        )\n    }\n}\n\nexport default BookList;","import './App.css';\nimport Form from \"./components/Form\";\nimport MainMenu from \"./components/MainMenu\";\nimport BookList from \"./components/BookList\";\nimport {useState} from \"react\";\n\nfunction App() {\n\n    const fetchBookList = JSON.parse(localStorage.getItem('booklist')) || [];\n\n    // Добавляем в свойства книги её id, для возможности редактирования\n    const [bookList, setBookList] = useState(\n        fetchBookList.map((item,key) => {\n            return {\n                ...item,\n                id: key\n            }\n        })\n    )\n\n    let [selectedBook, setEditFormVisibility] = useState({});\n\n    function updateBookList(newBookList) {\n        setBookList(newBookList);\n\n        // Вырезаем из объекта книги свойство id, ненужное для хранения\n        localStorage.setItem('booklist', JSON.stringify(\n            newBookList.map(item => {\n                return {\n                    author: item.author,\n                    title: item.title,\n                    cover: item.cover\n                }\n            })\n        ));\n    }\n\n    function deleteItem(book) {\n        let newBookList = bookList.filter(item => item.title !== book.title);\n        updateBookList(newBookList);\n    }\n\n    function openEditForm(book) {\n        setEditFormVisibility(book);\n    }\n\n    function closeForm(e) {\n        e.preventDefault();\n        setEditFormVisibility({});\n    }\n\n    function submitForm(book) {\n        // -1 - если новая книга\n        if (book.id === -1) {\n            bookList.push({\n                id: book.id,\n                author: book.author,\n                title: book.title,\n                cover: book.cover\n            })\n        } else {\n            bookList[book.id] = {\n                id: book.id,\n                author: book.author,\n                title: book.title,\n                cover: book.cover\n            };\n        }\n        updateBookList(bookList);\n        setEditFormVisibility({});\n    }\n\n    function fillTestData() {\n        const testBookList = [\n            {author: 'Максим Дорофеев', title: 'Путь джедая', cover: 'https://simg.marwin.kz/media/catalog/product/cache/550cf8d20d514ab5650dc2adb71f19c7/6/0/6005527947.jpg'},\n            {author: 'Бахытжан Бухарбай', title: 'Настольная книга казахского бизнесмена', cover: 'https://simg2.marwin.kz/media/catalog/product/cache/550cf8d20d514ab5650dc2adb71f19c7/5/5/555_1_5.jpg'},\n            {author: 'Сергей Есин', title: 'Опись имущества одинокого человека', cover: 'https://simg.marwin.kz/media/catalog/product/cache/550cf8d20d514ab5650dc2adb71f19c7/c/o/cover1__w600_22_256.jpg'},\n        ];\n        updateBookList(\n            testBookList.map((item,key) => {\n                return {\n                    ...item,\n                    id: key\n                }\n            })\n        );\n    }\n\n  return (\n    <div className=\"App\">\n        <Form\n            book = {selectedBook}\n            closeForm = {closeForm}\n            submitForm = {submitForm}\n        />\n      <MainMenu\n        onPressAddBook = {openEditForm}\n        onFillTestData = {fillTestData}\n      />\n      <BookList\n        books = {bookList}\n        onDeleteItem={deleteItem}\n        onEditItem={openEditForm}\n\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}